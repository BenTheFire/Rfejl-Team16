@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <div class="formContainer">
            <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
                <h4>Create a new account</h4>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

                <div class="mb-3">
                    <input asp-for="Input.Username" class="form-control" autocomplete="username" placeholder="username123" />
                    <label asp-for="Input.Username" class="form-label">Username</label>
                    <span asp-validation-for="Input.Username" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <input asp-for="Input.Email" class="form-control" autocomplete="email" placeholder="name@example.com" />
                    <label asp-for="Input.Email" class="form-label">Email</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <input asp-for="Input.Password" class="form-control" autocomplete="new-password" placeholder="password" />
                    <label asp-for="Input.Password" class="form-label">Password</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" placeholder="confirm password" />
                    <label asp-for="Input.ConfirmPassword" class="form-label">Confirm Password</label>
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <input class="form-check-input" type="checkbox" id="adminCheckbox" />
                    <label for="adminCheckbox" class="form-label">Register as admin</label>
                </div>

                <div class="mb-3" id="secretKeyField">
                    <input asp-for="Input.SecretKey" class="form-control" placeholder="secret key" />
                    <label asp-for="Input.SecretKey" class="form-label">Admin Register Key</label>
                    <span asp-validation-for="Input.SecretKey" class="text-danger"></span>
                </div>

                <button id="registerSubmit" type="submit" class="buttonAdd">Register</button>
            </form>
        </div>
    </div>

    <div class="col-md-6 col-md-offset-2">
        <div class="formContainer">
            <h4>Use another service to register</h4>
            <hr />
            @if ((Model.ExternalLogins?.Count ?? 0) == 0)
            {
                <p>There are no external authentication services configured so far.</p>
            }
            else
            {
                <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                    <div>
                        @foreach (var provider in Model.ExternalLogins!)
                        {
                            <button type="submit" class="buttonAdd" name="provider" value="@provider.Name">
                                @provider.DisplayName
                            </button>
                        }
                    </div>
                </form>
            }
        </div>
    </div>
</div>


<script>
    const checkbox = document.getElementById("adminCheckbox");
    const secretKeyField = document.getElementById("secretKeyField");

    function toggleSecretKey() {
        secretKeyField.style.display = checkbox.checked ? "block" : "none";
    }

    checkbox.addEventListener("change", toggleSecretKey);

    window.addEventListener("DOMContentLoaded", toggleSecretKey);
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
