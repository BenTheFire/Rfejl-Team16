@page "/"
@using Ticketmaster.Data
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Data.Services.StaticServiceMethods
@using Ticketmaster.Objects
@inject ITicketMasterService TMS

<PageTitle>Index</PageTitle>

<body>
    @if (!isLoaded)
    {
        <div style="display: flex; justify-content: center; align-items: center; height: 100vh;">
            <div>
                <h2>Loading...</h2>
                <img src="./Loading.gif" alt="Loading" style="width:128px;height:128px" />
            </div>
        </div>
    }
    else
    {
        <div class="content">
            <div class="movie-container">
                <div class="movie-header">
                    <h2 style="color: var(--accent-text-color);">Now Showing</h2>
                </div>
                <div class="info-section">
                    <div class="screenings">
                        <div class="row">
                            @foreach (var movie in fetchedMovies)
                            {
                                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                                    <NavLink href="@HrefMovieLink(movie)" class="text-decoration-none">
                                        <div class="card">
                                            <img src="@movie.ImageSource" alt="Movie Poster" class="poster" />
                                            <div class="card-body">
                                                <h5 class="card-title" style="color: var(--color-blue);">
                                                    @movie.Title (@movie.ReleaseDate)
                                                </h5>
                                                <h5 class="card-title">
                                                    @GetMovieLength(movie.LengthInSeconds).ToShortTimeString()
                                                </h5>
                                            </div>
                                        </div>
                                    </NavLink>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</body>
@code
{
    bool isLoaded = false;
    public List<Movie> fetchedMovies = new();
    protected override async Task OnInitializedAsync()
    {
        await TMS.UpdateImagesAndDateAsync();
        await FetchMovies();
    }

    public async Task FetchMovies()
    {
        fetchedMovies = await TMS.FetchMoviesByCount(20);
        isLoaded = true;
    }

    //Másodperceket TimeOnly-ba konvertálni
    public TimeOnly GetMovieLength(int timeInSeconds)
    {
        int hour = timeInSeconds / 3600;
        timeInSeconds %= 3600;
        int minute = timeInSeconds / 60;
        timeInSeconds %= 60;
        int second = timeInSeconds;

        return new(hour, minute, second);
    }

    //Kis függvény az oldalak közötti váltásra
    public string HrefMovieLink(Movie movie) => $"/movies/{(movie.ImdbId):D7}";
}
<style>
    @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', sans-serif;
        background-color: var(--bg-color);
        color: var(--text-color);
        line-height: 1.75;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    header {
        background: var(--header-bg);
        padding: 2rem 1.5rem;
        text-align: center;
        border-bottom: 1px solid var(--color-gray-3);
    }

        header h1 {
            font-size: 3rem;
            font-weight: 700;
            color: var(--color-yellow);
            color: var(--accent-color);
        }

    nav {
        margin-top: 1rem;
    }

        nav a {
            margin: 0 0.75rem;
            color: var(--color-purple);
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s ease;
            color: var(--accent-color);
        }

            nav a:hover {
                color: var(--color-blue);
            }

    .content {
        max-width: 960px;
        margin: 3rem auto;
        padding: 0 1.5rem;
    }
    .row{
        gap: 2rem;
    }
    .card {
        background: var(--card-bg);
        border-radius: 1.5rem;
        padding: 1.5rem 1rem;
        margin-bottom: 2rem;
        
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        text-align: center;
        width: 100%;
        max-width: 240px;
        height: 420px; /* 🟢 FIXED HEIGHT for all cards */
        background-color: var(--card-bg);
        border-left: 5px solid var(--color-red);
        border-radius: 1rem;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 1rem;
        text-align: center;
    }

        .card:hover {
            transform: translateY(-6px);
            box-shadow: 0 16px 32px rgba(0, 0, 0, 0.35);
            border-left-color: var(--color-yellow);
        }

        .card h2,
        .card h5 {
            color: var(--color-blue);
            margin-top: 1rem;
            word-break: break-word;
        }

        .card img {
            width: 100%;
            border-radius: 0.75rem;
            max-height: 320px;
            object-fit: cover;
        }

    .button {
        display: inline-block;
        background-color: var(--color-blue);
        color: var(--color-white);
        padding: 1rem 2rem;
        border: none;
        border-radius: 999px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .button:hover {
            background-color: var(--color-blue-hover);
            transform: scale(1.05);
        }

    .toggle-theme {
        margin-top: 2rem;
    }

    footer {
        text-align: center;
        padding: 2rem 1rem;
        background-color: var(--footer-bg);
        border-top: 1px solid var(--color-gray-3);
        color: var(--color-gray-3);
        font-size: 0.9rem;
    }

    .movie-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        gap: 5rem;
        padding: 2rem;
        justify-content: center;
    }

    .card {
        
    }

        .card img {
            width: 100%;
            height: 280px; /* 🟢 FIXED IMAGE HEIGHT */
            object-fit: cover;
            border-radius: 0.75rem;
        }

        .card h5 {
            color: var(--color-blue);
            font-size: 0.95rem;
            margin: 0.5rem 0 0;
            word-break: break-word;
        }
</style>