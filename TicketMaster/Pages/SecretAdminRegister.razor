@page "/secret"
@using TicketMaster.Data.DTOs;
@inject TicketMaster.Data.Services.Interfaces.IRegisterService RS

<body>
    <h3>RegisterPage</h3>

    <div class="register-container">
        <form @onsubmit="SubmitRegister" method="post" class="register-form">
            <h4>Register</h4>
            <input type="email" @bind-value="Model.Email" />
            <input type="text" @bind-value="Model.Username" />
            <input type="password" @bind-value="Model.Password" />
            <input type="password" @bind-value="PwAgain" />
            <input type="text" @bind-value="Model.SshKey" />
            <button type="submit" />
        </form>

        @if (!PwMatch)
        {
            <p class="fail-message">Passwords do not match</p>
        }
        @if (UserExists)
        {
            <p class="fail-message">Username already exists</p>
        }
    </div>
</body>

@code {
    private RegisterAdminDTO Model = new RegisterAdminDTO();
    private string PwAgain = "";
    private bool PwMatch = true;
    private bool UserExists = false;
    public async Task SubmitRegister()
    {
        if (Model.Password != PwAgain)
        {
            PwMatch = false;
            return;
        }
        RegisterAdminDTO newAdmin = new RegisterAdminDTO()
            {
                Email = Model.Email,
                Username = Model.Username,
                Password = Model.Password,
                SshKey = Model.SshKey
            };
        UserExists = await RS.RegisterAdmin(newAdmin);
    }

    protected override void OnInitialized()
    {
        Model = new();
    }

}
