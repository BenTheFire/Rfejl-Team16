@page "/movies/{id}"
@using TicketMaster.Data
@using TicketMaster.Data.DTOs
@using TicketMaster.Data.Services.Interfaces
@using TicketMaster.Data.Services.StaticServiceMethods
@using TicketMaster.Objects
@inject IMovieService IMS

@code {
    [Parameter] public string Id { get; set; }

    public Movie movieData;
    public List<Casting> castData = new();
    public List<Screening> screeningData = new();
    public string imageLink;

    protected override async Task OnInitializedAsync()
    {
        var result = await IMS.FetchMovieDataAsync(Id);
        movieData = result.Movie;
        castData = result.Cast;
        screeningData = await IMS.FetchScreenings(Id);
    }

    private string ConvertToHoursAndMinutes(int seconds)
    {
        int hours = seconds / 3600;
        int minutes = (seconds % 3600) / 60;

        if (hours > 0)
        {
            return $"{hours}h {minutes}min";
        }
        else
        {
            return $"{minutes}min";
        }
    }

    private bool SameDW()
    {
        int d0id = castData.Find(c => c.Role == "Director").Person.Id;
        int w0id = castData.Find(c => c.Role == "Writer").Person.Id;

        if (d0id == w0id){
            return true;
        }

        return false;
    }

    private List<Person> MovieDirectors()
    {
        List<Person> directors = castData
            .Where(c => c.Role == "Director")
            .Select(c => c.Person).ToList();

        return directors;
    }

    private List<Person> MovieWriters()
    {
        List<Person> writers = castData
             .Where(c => c.Role == "Writer")
             .Select(c => c.Person).ToList();

        return writers;
    }
    public string HrefScreeningLink(Screening screening) => $"/screening/{screening.Id}";
}

<body>
    @if (movieData != null)
    {
        <div class="movie-container">
            <div class="movie-header">
                <img src="@movieData.ImageSource" alt="@movieData.Title Poster" class="poster" />
                <div class="movie-details">
                    <h2>@movieData.Title (@movieData.ReleaseDate)</h2>
                    <p class="meta">
                        @if (SameDW())
                        {
                            <p>Directed and Written by: @MovieDirectors().First().Name</p>
                        }
                        else
                        {
                            <p>
                                Directed by: @string.Join(", ", (MovieDirectors().Select(d => d.Name).ToList()))<br />
                                Written by: @string.Join(", ", (MovieWriters().Select(d => d.Name).ToList()))
                            </p>
                        }
                    </p>
                    <p class="description">@movieData.Description</p>
                    <p class="description">@ConvertToHoursAndMinutes(movieData.LengthInSeconds)</p>
                </div>
            </div>

            <div class="info-section">
                <div class="screenings">
                    <h3>Screenings</h3>
                    <ul>
                        @foreach (var screening in screeningData)
                        {
                            <li class="screenings" onclick="location.href='/screening/@screening.Id' ">
                                <strong>@screening.Time.ToString("yyyy-MM-dd HH:mm")</strong><br />
                                @screening.InLocation.Name - @screening.InLocation.Address<br />
                                <span>Seats: @screening.SeatsTaken / @screening.InLocation.Capacity</span>   
                            </li>
                        }
                    </ul>
                </div>

                <div class="cast">
                    <h3>Cast</h3>
                    <ul>
                        @foreach (Casting casting in castData)
                        {
                            <li>
                                <strong>@casting.Person.Name</strong><br />
                                <weak>as @casting.Role</weak>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
    else
    {
        <div style="display: flex; justify-content: center; align-items: center; height: 100vh">
            <div>
                <h2>Loading...</h2>
                <img src=".\Loading.gif" alt="..." style="width:128px;height:128px" />
            </div>
        </div>
    }

</body>
<style>
.movie-container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 1rem;
    background-color: #1e1e1e;
    color: #fff;
    border-radius: 1rem;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
}

.movie-header {
    display: flex;
    flex-direction: row;
    gap: 2rem;
    margin-bottom: 2rem;
}

.poster {
    width: 200px;
    height: 300px;
    object-fit: cover;
    border-radius: 0.5rem;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
}

.movie-details {
    flex: 1;
}

    .movie-details h2 {
        margin: 0 0 0.5rem 0;
        font-size: 2rem;
    }

.meta {
    font-size: 0.95rem;
    color: #aaa;
    margin-bottom: 1rem;
}

.description {
    font-size: 1rem;
    line-height: 1.6;
    color: #ddd;
}

.info-section {
    display: flex;
    gap: 2rem;
    flex-wrap: wrap;
}

.screenings, .cast {
    flex: 1 1 45%;
    background-color: #2a2a2a;
    padding: 1rem;
    border-radius: 0.5rem;
}

.screenings ul, .cast ul {
    list-style: none;
    padding-left: 0;
}

.screenings a, .cast a {
    margin-bottom: 1rem;
    background: #333;
    padding: 0.75rem;
    border-radius: 0.5rem;
    line-height: 1.4;
}

.screenings li {
    margin: 1rem;
    background: #444;
}
.screenings li:hover{
    transform: scale(1.03);
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.5);
}


.poster {
    width: 100%;
    max-width: 300px;
    height: auto;
}

.info-section {
    flex-direction: column;
}
</style>
