@page "/admin/edit/tickets"
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Objects
@using Ticketmaster.Data.DTOs
@using Ticketmaster.Extra
@inject ITicketService TS
@inject IScreeningService SS
@inject ICustomerService CS
<body>
    @if (T != null && screenings != null && customers != null) {
        <div class="forms">
            <div class="formContainer my-2">
                <div class="row g-4">
                    <div class="col-12 col-md-6">
                        <div class="formContainer">
                            <h4>Create ticket</h4>
                            <form onsubmit="@createTicket">
                                <p>Screening</p>
                                <p>
                                    <select @bind="@screeningId" class="form-control mb-2">
                                        <option value="0">-- Choose a screening --</option>
                                        @foreach (var screening in screenings)
                                        {
                                            <option value="@screening.Id">@screening.Id --> @screening.OfMovie.Title (@screening.Time) in @screening.InLocation.Name</option>
                                        }
                                    </select>
                                </p>
                                <p>Customer</p>
                                <p>
                                    <select @bind="@customerId" class="form-control mb-2">
                                        <option value="0">-- Choose a customer --</option>
                                        @foreach (var customer in customers)
                                        {
                                            @if (customer.OfUser != null)
                                            {
                                                <option value="@customer.Id">@customer.Email ({@customer.OfUser.UserName.IsNullOrEmpty() ? "" : @customer.OfUser.UserName})</option>
                                            }
                                            else
                                            {
                                                <option value="@customer.Id">@customer.Email</option>
                                            }
                                        }
                                    </select>
                                </p>
                                <p>Price</p>
                                <p>
                                    <input type="number" class="form-control mb-2" placeholder="Price of ticket" @bind-value="T.Price" />
                                </p>
                                <p>Seat position</p>
                                <p>
                                    <input type="text" class="form-control mb-2" placeholder="Seat position" @bind-value="T.Seat" />
                                </p>
                                <p>Status (0, 1, 2)</p>
                                <p>
                                    <input type="number" class="form-control mb-2" placeholder="Status (0, 1, 2)" @bind-value="T.Status" />
                                </p>
                                <!--vendor?-->
                                <p>Purchase time of ticket</p>
                                <p>
                                    <input type="date" class="form-control mb-2" placeholder="Purchase time of ticket" @bind-value="T.PurchaseTime" />
                                </p>
                                <p>
                                    <button type="submit" class="buttonAdd">Create Ticket</button>
                                </p>
                                <p>@text</p>
                            </form>
                        </div>
                    </div>
                    <div class="col-12 col-md-6">
                        <div class="formContainer">
                            <h4>Update ticket</h4>
                            <ul>
                                @foreach (var ticket in tickets)
                                {
                                    @if(ticket.Customer.OfUser != null)
                                    {
                                        <li><a href="@Href(ticket.Id)">@ticket.Customer.OfUser.UserName (@ticket.Customer.Email) -- @ticket.OfScreening.OfMovie.Title (@ticket.OfScreening.Time, @ticket.OfScreening.InLocation.Name)</a></li>
                                    }
                                    else
                                    {
                                        <li><a href="@Href(ticket.Id)">@ticket.Customer.Email -- @ticket.OfScreening.OfMovie.Title (@ticket.OfScreening.Time, @ticket.OfScreening.InLocation.Name)</a></li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    }
    else
    {
        <div style="display: flex; justify-content: center; align-items: center; height: 100vh">
            <div>
                <h2>Loading...</h2>
                <img src=".\Loading.gif" alt="..." style="width:128px;height:128px" />
            </div>
        </div>
    }
</body>
@code {
    private Ticket T = new();
    private List<Ticket> tickets = new();
    private List<Screening> screenings = new();
    private List<CustomerData> customers = new();
    private int screeningId;
    private int customerId;
    private string text;
    private string Href(int id) => $"/admin/edit/ticket/{id}";
    protected override async Task OnInitializedAsync()
    {
        tickets = await TS.GetTicketsAsync();
        screenings = await SS.GetScreeningsAsync();
        customers = await CS.GetCustomersAsync();
    }
    private async Task createTicket()
    {
        if (screeningId == 0 && customerId == 0)
        {
            text = "Please select a screening and a customer";
            return;
        }
        if (T.Price == 0)
        {
            text = "Please enter a price";
            return;
        }
        if (T.Seat.IsNullOrEmpty())
        {
            text = "Please enter a seat position";
            return;
        }
        T.OfScreening = await SS.GetScreeningByIdAsync(screeningId);
        T.Customer = await CS.GetCustomerByIdAsync(customerId);
        await TS.CreateTicketAsync(T);
        await OnInitializedAsync();
        text = "";
    }
    
}
<style>
    .forms {
        padding: 2rem;
        min-height: 100vh;
        background-color: var(--bg-color);
        color: var(--text-color);
    }

    .formContainer {
        background-color: var(--card-bg);
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        margin-bottom: 2rem;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .formContainer h4 {
            color: var(--accent-text-color);
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }

        .formContainer p {
            font-weight: bold;
            margin-bottom: 0.25rem;
        }

    input[type="text"],
    input[type="number"],
    input[type="date"],
    input[type="datetime-local"],
    select.form-control {
        background-color: var(--input-bg, var(--card-bg));
        color: var(--text-color);
        border: 1px solid var(--color-gray-3);
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        width: 100%;
        font-size: 1rem;
        transition: border-color 0.2s ease;
    }

    input::placeholder {
        color: var(--text-color);
        opacity: 0.6;
    }

    input:focus,
    select:focus {
        outline: none;
        border-color: var(--color-blue);
        box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.25); /* var(--color-blue) transparency */
    }

    /* Dropdown styles */
    select.form-control option {
        background-color: var(--input-bg, var(--card-bg));
        color: var(--text-color);
    }

    /* Button base */
    button[type="submit"],
    button[type="button"] {
        width: 100%;
        padding: 0.75rem;
        margin-top: 0.5rem;
        font-weight: 600;
        border: none;
        border-radius: 0.5rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    /* Button variants */
    .buttonAdd {
        background-color: var(--color-blue);
        color: var(--color-white);
    }

        .buttonAdd:hover {
            background-color: var(--color-blue-hover);
        }

    .buttonEdit {
        background-color: var(--color-yellow);
        color: var(--color-black);
    }

    .buttonDelete {
        background-color: var(--color-red);
        color: var(--color-white);
    }

        .buttonDelete:hover {
            background-color: #dc2626;
        }

    ul {
        padding-left: 1rem;
        margin-top: 1rem;
    }

        ul li {
            margin-bottom: 0.5rem;
        }

            ul li a {
                color: var(--color-purple);
                text-decoration: none;
                font-weight: 500;
                transition: color 0.2s ease;
            }

                ul li a:hover {
                    color: var(--color-yellow);
                }

</style>


