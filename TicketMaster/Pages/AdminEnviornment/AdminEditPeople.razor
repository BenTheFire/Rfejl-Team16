@page "/admin/edit/people"
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Objects
@inject IPeopleService PS
@layout MainLayout
@inherits LayoutComponentBase
@inject ThemeService ThemeService
<body>
    <div class="@ThemeClass">
    <h3 style="color: var(--accent-text-color);">Edit People</h3>
    
    <div class="admin-forms">
        <div class="admin-form">
            <form onsubmit="@createPerson">
                <input type="text" placeholder="Name of person" @bind-value="P.Name" class="editor-input" />
                <input type="datetime" placeholder="Birthday of person" @bind-value="P.BirthDate" class="editor-input" />
                <input type="text" placeholder="Nationality of person" @bind-value="P.Nationality" class="editor-input" />
                <button type="submit" class="editor-submit-btn success full-width">Create Person</button>
            </form>
        </div>

        <div class="admin-form">
            <form onsubmit="@updatePerson">
                <input type="number" placeholder="ID of person" @bind-value="P.Id" class="editor-input" />
                <input type="text" placeholder="Name of person" @bind-value="P.Name" class="editor-input" />
                <input type="datetime" placeholder="Birthday of person" @bind-value="P.BirthDate" class="editor-input" />
                <input type="text" placeholder="Nationality of person" @bind-value="P.Nationality" class="editor-input" />
                <button type="submit" class="editor-submit-btn success full-width">Update Person</button>
            </form>
        </div>

        <div class="admin-form">
            <form onsubmit="@deletePerson">
                <input type="number" placeholder="Person ID to delete" @bind-value="P.Id" class="editor-input" />
                <button type="submit" class="editor-submit-btn danger full-width">Delete Person</button>
            </form>
        </div>
    </div>
    </div>
</body>
@code {
    private Person P = new();
    private async Task createPerson()
    {
        await PS.CreatePerson(P);
    }

    private async Task updatePerson()
    {
        await PS.UpdatePerson(P);
    }

    private async Task deletePerson()
    {
        await PS.DeletePerson(P.Id);
    }
}
@code {
    private string ThemeClass => ThemeService.IsLightTheme ? "light-theme" : "dark-theme";

    protected override void OnInitialized()
    {
        ThemeService.OnThemeChanged += ThemeChanged;
    }

    private async Task ThemeChanged()
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= ThemeChanged;
    }
}

