@page "/admin/edit/screenings"
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Objects
@using Ticketmaster.Data.DTOs
@inject IScreeningService SS
@inject ILocationService LS
@inject IMovieService MS
<body>
    <div class="forms">
        <div class="formContainer my-2">
            <div class="row g-4">
                <div class="col-12 col-md-6">
                    <div class="formContainer">
                        <h4>Create Screening</h4>
                        <form onsubmit="@createScreening">
                            <p>Location</p>
                            <p>
                                <select @bind="@locationId" class="form-control mb-2">
                                    @foreach (var location in locations)
                                    {
                                        <option value="@location.Id">@location.Name</option>
                                    }
                                </select>
                            </p>
                            <p>Movie</p>
                            <p>
                                <select @bind="@movieId" class="form-control mb-2">
                                    @foreach (var movie in movies)
                                    {
                                        //todo: add a check to see if the movie is in the location
                                        <option value="@movie.Id">@movie.Title (@movie.ReleaseDate)</option>
                                    }
                                </select>
                            </p>
                            <p>Date of screening</p>
                            <p>
                                <input type="datetime" class="form-control mb-2" placeholder="Date of screening" @bind-value="S.Time" />
                            </p>

                            <p>Number of seats</p>
                            <p>
                                <input type="number" class="form-control mb-2" placeholder="Number of seats taken" @bind-value="S.SeatsTaken" />
                            </p>
                            <p>
                                <button type="submit" class="buttonAdd">Create Screening</button>
                            </p>
                        </form>
                    </div>
                </div>
                <div class="col-12 col-md-6">
                    <div class="formContainer">
                        <h4>Update Screening</h4>
                        <ul>
                            @foreach (var screening in screenings)
                            {
                                <li>
                                    <a href="@Href(screening.Id)">@screening.OfMovie.Title (@screening.OfMovie.ReleaseDate): @screening.Time, @screening.InLocation</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
@code {
    private Screening S = new();
    private List<Screening> screenings = new();
    private List<Location> locations = new();
    private List<Movie> movies = new();
    private int locationId;
    private int movieId;
    private string Href(int id) => $"/admin/edit/screening/{id}";
    protected override async Task OnInitializedAsync()
    {
        screenings = await SS.GetScreeningsAsync();
        locations = await LS.GetLocationsAsync();
        movies = await MS.GetMoviesAsync();
    }
    private async Task createScreening()
    {
        S.InLocation = await LS.GetLocationByIdAsync(locationId);
        S.OfMovie = await MS.GetMovieByIdAsync(movieId);
        await SS.CreateScreening(S);
    }
    
}

<style>
    .forms {
        align-content: normal;
        justify-content: normal;
        gap: 3rem;
    }

    .formContainer {
        background: #23272f;
        border-radius: 1rem;
        box-shadow: 0 4px 16px rgba(0,0,0,0.15);
        border: 1px solid #2c313c;
        color: #f8f9fa;
        padding: 1.5rem 1.5rem 1rem 1.5rem;
        margin: 0.5rem 0;
        min-height: 100%;
    }

        .formContainer h4 {
            margin-bottom: 1rem;
            color: #aee1f9;
        }


    .formContainer {
        display: flex;
        flex-direction: column;
        min-width: 220px;
        padding: 1.5rem 1.5rem 1rem 1.5rem;
        margin: 0.5rem 0;
        background: #23272f;
        border-radius: 1rem;
        box-shadow: 0 4px 16px rgba(0,0,0,0.15);
        border: 1px solid #2c313c;
        color: #f8f9fa;
    }

        .formContainer h4 {
            margin-bottom: 1rem;
            color: #aee1f9;
        }

        .formContainer input,
        .formContainer button {
            margin-bottom: 0.7rem;
            border-radius: 0.4rem;
            border: 1px solid #444;
            padding: 0.5rem;
            background: #181a20;
            color: #f8f9fa;
        }

        .formContainer button {
            font-weight: 600;
            cursor: pointer;
            transition: background 0.2s;
        }

    .buttonDelete {
        background-color: #e74c3c;
    }

    .buttonAdd {
        background-color: #27ae60;
    }

    .buttonEdit {
        background-color: #2980b9;
    }
</style>

