@page "/admin/edit/screenings"
@using TicketMaster.Data.Services.Interfaces
@using TicketMaster.Objects
@using TicketMaster.Data.DTOs
@inject IScreeningService SS
<body>
    <h3>Edit Screenings</h3>
    <form onsubmit="@createScreening">
        <input type="number" placeholder="ID of location" @bind-value="S.InLocationId" />
        <input type="number" placeholder="ID of movie" @bind-value="S.OfMovieId" />
        <input type="datetime" placeholder="Date of screening" @bind-value="S.Time" />
        <input type="number" placeholder="Number of seats taken" @bind-value="S.SeatsTaken" />
        <button type="submit">Create Screening</button>
    </form>
    <form onsubmit="@updateScreening">
        <input type="number" placeholder="ID of Screening" @bind-value="S.Id" />
        <input type="number" placeholder="ID of location" @bind-value="S.InLocationId" />
        <input type="number" placeholder="ID of movie" @bind-value="S.OfMovieId" />
        <input type="datetime" placeholder="Date of screening" @bind-value="S.Time" />
        <input type="number" placeholder="Number of seats taken" @bind-value="S.SeatsTaken" />
        <button type="submit">Update Screening</button>
    </form>
    <form onsubmit="@deleteScreening">
        <input type="number" placeholder="Screening ID to delete" @bind-value="S.Id" />
        <button type="submit">Delete Screening</button>
    </form>
</body>
@code {
    private ScreeningDTO S = new();
    private async Task createScreening()
    {
        await SS.CreateScreening(S);
    }

    private async Task updateScreening()
    {
        await SS.UpdateScreening(S);
    }

    private async Task deleteScreening()
    {
        await SS.DeleteScreening((int)S.Id);
    }
    
}

