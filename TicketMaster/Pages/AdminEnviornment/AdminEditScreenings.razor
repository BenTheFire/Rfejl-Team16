@page "/admin/edit/screenings"
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Objects
@using Ticketmaster.Data.DTOs
@inject IScreeningService SS
@layout MainLayout
@inherits LayoutComponentBase
@inject ThemeService ThemeService
<body>
    <div class="@ThemeClass">
        <h3 style="color: var(--accent-text-color);">Edit Screenings</h3>
        <div class="forms">

            <div class="formContainer">
                <form onsubmit="@createScreening">
                    <input type="number" placeholder="ID of location" @bind-value="S.InLocationId" class="form-control mb-2" />
                    <input type="number" placeholder="ID of movie" @bind-value="S.OfMovieId" class="form-control mb-2" />
                    <input type="datetime-local" placeholder="Date of screening" @bind-value="S.Time" class="form-control mb-2" />
                    <input type="number" placeholder="Number of seats taken" @bind-value="S.SeatsTaken" class="form-control mb-2" />
                    <button type="submit" class="buttonAdd">Create Screening</button>
                </form>
            </div>

            <div class="formContainer">
                <form onsubmit="@updateScreening">
                    <input type="number" placeholder="ID of Screening" @bind-value="S.Id" class="form-control mb-2" />
                    <input type="number" placeholder="ID of location" @bind-value="S.InLocationId" class="form-control mb-2" />
                    <input type="number" placeholder="ID of movie" @bind-value="S.OfMovieId" class="form-control mb-2" />
                    <input type="datetime-local" placeholder="Date of screening" @bind-value="S.Time" class="form-control mb-2" />
                    <input type="number" placeholder="Number of seats taken" @bind-value="S.SeatsTaken" class="form-control mb-2" />
                    <button type="submit" class="buttonEdit">Update Screening</button>
                </form>
            </div>

            <div class="formContainer">
                <form onsubmit="@deleteScreening">
                    <input type="number" placeholder="Screening ID to delete" @bind-value="S.Id" class="form-control mb-2" />
                    <button type="submit" class="buttonDelete">Delete Screening</button>
                </form>
            </div>

        </div>
    </div>
</body>
@code {
    private ScreeningDTO S = new();
    private async Task createScreening()
    {
        await SS.CreateScreening(S);
    }

    private async Task updateScreening()
    {
        await SS.UpdateScreening(S);
    }

    private async Task deleteScreening()
    {
        await SS.DeleteScreening((int)S.Id);
    }
    
}
@code {
    private string ThemeClass => ThemeService.IsLightTheme ? "light-theme" : "dark-theme";

    protected override void OnInitialized()
    {
        ThemeService.OnThemeChanged += ThemeChanged;
    }

    private async Task ThemeChanged()
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= ThemeChanged;
    }
}

