@page "/admin/edit/vendors"
@using Microsoft.AspNetCore.Identity
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Objects
@using Ticketmaster.Data.DTOs
@inject IVendorService VS
<body>
    <div class="forms">
        <div class="formContainer my-1">
            <div class="row g-4">
                <div class="col-12 col-md-6">
                    <div class="formContainer">
                        <h4>Update vendor</h4>
                        <ul>
                            @foreach (var vendor in vendors)
                            {
                                <li><a href="@Href(vendor.Id)">@vendor.Id</a></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--<div class="forms">
        <div class="formContainer">
            <form onsubmit="@createVendor">
                <input type="text" placeholder="Username of Vendor" @bind-value="V.Username" />
                <input type="text" placeholder="Password of Vendor" @bind-value="V.PasswordHash" />
                <input type="text" placeholder="Email of Vendor" @bind-value="V.Email" />
                <input type="number" placeholder="ID of Location" @bind-value="V.LocationId" />
                <button type="submit" class="buttonAdd">Create Vendor</button>
            </form>
        </div>
        <div class="formContainer">
            <form onsubmit="@updateVendor">
                <input type="number" placeholder="ID of Vendor to update" @bind-value="V.Id" />
                <input type="text" placeholder="Username of Vendor" @bind-value="V.Username" />
                <input type="text" placeholder="Password of Vendor" @bind-value="V.PasswordHash" />
                <input type="text" placeholder="Email of Vendor" @bind-value="V.Email" />
                <input type="number" placeholder="ID of Location" @bind-value="V.LocationId" />
                <button type="submit" class="buttonEdit">Update Vendor</button>
            </form>
        </div>
        <div class="formContainer">
            <form onsubmit="@deleteVendor">
                <input type="number" placeholder="Vendor ID to delete" @bind-value="V.Id" />
                <button type="submit" class="buttonDelete">Delete Vendor</button>
            </form>
        </div>
    </div>-->
</body>
@code {
    private IdentityUser V = new();
    private List<IdentityUser> vendors = new();
    private int vendorId;
    private int locationId;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            vendors = await VS.GetVendorsAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            vendors = null;
        }
    }
    private string Href(string id) => $"/admin/edit/vendor/{id}";
}

<style>
    .forms {
        display: flex;
        align-content: normal;
        justify-content: normal;
    }

    .formContainer {
        display: flex;
        align-content: normal;
        justify-content: normal;
        flex-direction: column;
    }

    .buttonDelete {
        background-color: red;
    }

    .buttonAdd {
        background-color: palegreen;
    }

    .buttonEdit {
        background-color: cornflowerblue;
    }
</style>