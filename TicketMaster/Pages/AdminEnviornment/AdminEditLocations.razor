@page "/admin/edit/locations"
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Objects
@using Ticketmaster.Data.DTOs
@inject ILocationService LS
<body>
    <h3>Edit Locations</h3>
    <div class="forms">
        <div class="formContainer">
            <form onsubmit="@createLocation">
                <input type="text" placeholder="Name of location" @bind-value="L.Name"/>
                <input type="text" placeholder="Address of location" @bind-value="L.Address" />
                <input type="number" placeholder="Max capacity" @bind-value="L.Capacity" />
                <!--todo vendors?-->
                <br />
                <button type="submit" class="buttonAdd">Create Location</button>
            </form>
        </div>
        <br />
        <div class="formContainer">
            <ul>
                @foreach(var location in locations)
                {
                    <li><a href="@location.Id">@location.Name</a></li>
                }
            </ul>
        </div>
    </div>
</body>

@code {
    private Location L = new();
    private List<Location> locations = new();
    //private List<Vendor> vendors = new();
    private string Href(int id) => $"/admin/edit/location/{id}";
    protected override async Task OnInitializedAsync()
    {
        locations = await LS.GetLocationsAsync();
    }
    private async Task createLocation()
    {
        await LS.CreateLocationAsync(L);
        await OnInitializedAsync();
    }
}

<style>
.forms{
    display: flex;
    align-content: normal;
    justify-content: normal;
}

.formContainer {
    display: flex;
    align-content: normal;
    justify-content: normal;
    flex-direction: column;
}

.buttonDelete {
    background-color: red;
}

.buttonAdd {
    background-color: palegreen;
}

.buttonEdit {
    background-color: cornflowerblue;
}
</style>