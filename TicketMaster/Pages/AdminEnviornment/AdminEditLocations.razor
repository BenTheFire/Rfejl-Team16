@page "/admin/edit/locations"
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Objects
@using Ticketmaster.Data.DTOs
@inject ILocationService LS
@inject ThemeService ThemeService
<body>
    <div class="forms">
        <div class="formContainer my-2">
            <div class="row g-4">
                <div class="col-12 col-md-6">
                    <div class="formContainer">
                        <h4>Create Location</h4>
                        <form onsubmit="@createLocation">
                            <p>Name of location</p>
                            <p>
                                <input type="text" class="form-control mb-2" placeholder="Name of location" @bind-value="L.Name" />
                            </p>
                            <p>Address of location</p>
                            <p>
                                <input type="text" class="form-control mb-2" placeholder="Address of location" @bind-value="L.Address" />
                            </p>
                            <p>Max capacity</p>
                            <p>
                                <input type="number" class="form-control mb-2" placeholder="Max capacity" @bind-value="L.Capacity" />
                            </p>
                            <!--todo vendors?-->
                            <br />
                            <button type="submit" class="buttonAdd">Create Location</button>
                        </form>
                    </div>
                </div>
                <div class="col-12 col-md-6">
                    <div class="formContainer">
                        <h4>Edit Location</h4>
                        <ul>
                            @foreach (var location in locations)
                            {
                                <li><a href="@location.Id">@location.Name</a></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>


@code {
    private Location L = new();
    private List<Location> locations = new();
    //private List<Vendor> vendors = new();
    private string Href(int id) => $"/admin/edit/location/{id}";
    protected override async Task OnInitializedAsync()
    {
        locations = await LS.GetLocationsAsync();
    }
    private async Task createLocation()
    {
        await LS.CreateLocationAsync(L);
        await OnInitializedAsync();
    }
}
@code {
    private string ThemeClass => ThemeService.IsLightTheme ? "light-theme" : "dark-theme";

    protected override void OnInitialized()
    {
        ThemeService.OnThemeChanged += ThemeChanged;
    }

    private async Task ThemeChanged()
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= ThemeChanged;
    }
}

<style>
    .forms {
        padding: 2rem;
        min-height: 100vh;
        background-color: var(--bg-color);
        color: var(--text-color);
    }

    .formContainer {
        background-color: var(--card-bg);
        padding: 1.5rem;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        margin-bottom: 2rem;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .formContainer h4 {
            margin-bottom: 1rem;
            font-size: 1.5rem;
            color: var(--accent-text-color);
        }

    /* ==== Inputs ==== */
    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid var(--color-gray-3);
        border-radius: 0.5rem;
        background-color: var(--input-bg, #fff);
        color: var(--text-color);
        font-size: 1rem;
    }

        .form-control:focus {
            outline: none;
            border-color: var(--color-blue);
            box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
        }

    /* ==== Buttons ==== */
    .buttonAdd {
        width: 100%;
        padding: 0.75rem 1.25rem;
        background-color: var(--color-blue);
        color: var(--color-white);
        border: none;
        border-radius: 0.5rem;
        font-weight: bold;
        cursor: pointer;
        margin-top: 1rem;
        transition: background-color 0.3s ease;
    }

        .buttonAdd:hover {
            background-color: var(--color-blue-hover);
        }

    /* ==== List for Edit Section ==== */
    .formContainer ul {
        list-style: none;
        padding-left: 0;
        margin-top: 1rem;
    }

    .formContainer li {
        margin-bottom: 0.75rem;
    }

    .formContainer a {
        text-decoration: none;
        color: var(--color-purple);
        font-weight: 500;
        transition: color 0.3s ease;
    }

        .formContainer a:hover {
            color: var(--color-yellow);
        }
</style>