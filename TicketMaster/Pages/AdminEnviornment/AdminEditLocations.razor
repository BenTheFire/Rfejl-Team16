@page "/admin/edit/locations"
@using Ticketmaster.Data.Services.Interfaces
@using Ticketmaster.Data.DTOs
@inject ILocationService LS
@layout MainLayout
@inherits LayoutComponentBase
@inject ThemeService ThemeService
<h3 style="color: var(--accent-text-color);">Edit Locations</h3>
<div class="@ThemeClass">
    <div class="admin-form-wrapper">

        <div class="admin-form-section">
            <form onsubmit="@createLocation">
                <input type="text" class="editor-input" placeholder="Name of location" @bind-value="L.Name" />
                <input type="text" class="editor-input" placeholder="Address of location" @bind-value="L.Address" />
                <input type="number" class="editor-input" placeholder="Max capacity" @bind-value="L.Capacity" />
                <input type="text" class="editor-input" placeholder="Vendor ID" @bind-value="L.VendorId" />
                <br />
                <button type="submit" class="editor-submit-btn">Create Location</button>
            </form>
        </div>

        <br />

        <div class="admin-form-section">
            <form onsubmit="@updateLocation">
                <input type="number" class="editor-input" placeholder="Location ID" @bind-value="L.Id" />
                <input type="text" class="editor-input" placeholder="Name of location" @bind-value="L.Name" />
                <input type="text" class="editor-input" placeholder="Address of location" @bind-value="L.Address" />
                <input type="number" class="editor-input" placeholder="Max capacity" @bind-value="L.Capacity" />
                <input type="text" class="editor-input" placeholder="Vendor ID" @bind-value="L.VendorId" />
                <br />
                <button type="submit" class="editor-submit-btn">Update Location</button>
            </form>
        </div>

        <br />

        <div class="admin-form-section">
            <form onsubmit="@deleteLocation">
                <input type="number" class="editor-input" placeholder="Location ID to delete" @bind-value="L.Id" />
                <br />
                <button type="submit" class="editor-submit-btn">Delete Location</button>
            </form>
        </div>

    </div>
</div>


@code {
    private LocationDTO L = new();
    private async Task createLocation()
    {
        //await LS.CreateLocation(L);
    }

    private async Task updateLocation()
    {
        //await LS.UpdateLocation(L);
    }

    private async Task deleteLocation()
    {
        //await LS.DeleteLocation((int)L.Id);
    }

}
@code {
    private string ThemeClass => ThemeService.IsLightTheme ? "light-theme" : "dark-theme";

    protected override void OnInitialized()
    {
        ThemeService.OnThemeChanged += ThemeChanged;
    }

    private async Task ThemeChanged()
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= ThemeChanged;
    }
}
<style>
.forms{
    display: flex;
    align-content: normal;
    justify-content: normal;
}

.formContainer {
    display: flex;
    align-content: normal;
    justify-content: normal;
    flex-direction: column;
}

.buttonDelete {
    background-color: red;
}

.buttonAdd {
    background-color: palegreen;
}

.buttonEdit {
    background-color: cornflowerblue;
}
</style>