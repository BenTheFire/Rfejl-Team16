@page "/screening/{screeningId}"
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Ticketmaster.Objects;
@using Ticketmaster.Data.DTOs;
@inject Ticketmaster.Data.Services.Interfaces.IScreeningService SS
@inject Ticketmaster.Data.Services.Interfaces.ITicketService TS
@inject Ticketmaster.Data.Services.Interfaces.IUserService US
@inject Ticketmaster.Data.Services.Interfaces.ICustomerService CS

<body>
    @if (screening != null) {
        <h3>Screening of @screening.OfMovie.Title on @screening.Time.ToString("yyyy-MM-dd HH:mm")</h3>
        <p>Filled slots: @screening.SeatsTaken</p>
        <button onclick="@buyTicket">Buy Ticket for screening</button>
    }
    else
    {
        <div style="display: flex; justify-content: center; align-items: center; height: 100vh">
            <div>
                <h2>Loading...</h2>
                <img src=".\Loading.gif" alt="..." style="width:128px;height:128px" />
            </div>
        </div>
    }
</body>


@code {
    [Parameter] public string ScreeningId { get; set; }
    [CascadingParameter] public Task<AuthenticationState> AuthState { get; set; }

    private IdentityUser User;

    private CustomerData customerData;

    private Screening? screening;

    private Ticket T;

    protected override async Task OnInitializedAsync()
    {
        screening = await SS.GetScreeningByIdAsync(Convert.ToInt16(ScreeningId));
        var authenticationState = await AuthState;
        if (authenticationState.User.Identity.IsAuthenticated)
        {
            var userId = authenticationState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            if (userId == null)
            {
                throw new Exception("User ID not found in claims");
            }
            User = await US.GetUserByIdAsync(userId);
            customerData = await CS.GetCustomerByUserIdAsync(userId);
        }
        else
        {
            User = null;
        }
    }
    protected async Task buyTicket()
    {
        await TS.CreateTicketAsync(new Ticket
            {
                OfScreening = screening,
                Price = 10,
                Seat = "A1",
                Status = 0,
                PurchaseTime = DateTime.Now
            });
    }
}
